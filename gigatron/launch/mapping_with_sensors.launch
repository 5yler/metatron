<?xml version="1.0"?>

<!-- mapping_with_sensors.launch
     Gigatron mapping launch file for hector_slam using RPLIDAR and IMU

     @author  Chris Desnoyers   <cjdesno@mit.edu>
     @author  Syler Wagner      <syler@mit.edu>
     
     @date    2015-09-07  cjdesno   creation
     @date    2015-09-08  syler     added RPLIDAR, IMU and IMU attitude to tf conversion nodes
 
     This launch file runs the ROS nodes for the RPLIDAR and IMU sensors, the node for IMU attitude to tf conversion, and the hector_mapping node

     Usage Instructions:
     1. In a terminal window, run:
        roslaunch gigatron mapping_with_sensors.launch
-->

<launch>
  <arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
  <arg name="base_frame" default="base_footprint"/>
  <arg name="odom_frame" default="base_footprint"/>
  <arg name="pub_map_odom_transform" default="true"/>
  <arg name="scan_subscriber_queue_size" default="5"/>
  <arg name="scan_topic" default="scan"/>
  <arg name="map_size" default="2048"/>

<!-- RPLIDAR -->
  <node pkg="rplidar_ros" type="rplidarNode" name="rplidarNode" output="screen">
  </node>

<!-- IMU -->
  <node pkg="rtimulib_ros" type="rtimulib_ros" name="rtimulib_node" output="screen">
      <param name="calibration_file_path" value="$(find rtimulib_ros)/config"/>
      <param name="frame_id" value="map"/> <!-- /map is used for debug in RViz, to be replaced by the imu_link -->
      <param name="update_rate" value="10"/>
  </node>

<!-- IMU attitude to tf conversion -->
  <node pkg="hector_imu_attitude_to_tf" type="imu_attitude_to_tf_node" name="imu_attitude_to_tf_node" output="screen">
    <remap from="imu_topic" to="imu" />
    <param name="base_stabilized_frame" type="string" value="base_stabilized" />
    <param name="base_frame" type="string" value="base_footprint" />
  </node>  

<!-- hector_slam mapping -->
  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    
    <!-- Frame names -->
    <param name="map_frame" value="map" />
    <param name="base_frame" value="$(arg base_frame)" />
    <param name="odom_frame" value="$(arg odom_frame)" />
    
    <!-- Tf use -->
    <param name="use_tf_scan_transformation" value="false"/>
    <param name="use_tf_pose_start_estimate" value="false"/>
    <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>
    
    <!-- Map size / start point -->
    <param name="map_resolution" value="0.050"/>
    <param name="map_size" value="$(arg map_size)"/>
    <param name="map_start_x" value="0.5"/>
    <param name="map_start_y" value="0.5" />
    <param name="map_multi_res_levels" value="2" />
    
    <!-- Map update parameters -->
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.9" />    
    <param name="map_update_distance_thresh" value="0.4"/>
    <param name="map_update_angle_thresh" value="0.06" />
    <param name="laser_min_dist" value="0.15" />
    <param name="laser_max_dist" value="6.0" />
    
    <!-- Advertising config --> 
    <param name="advertise_map_service" value="true"/>
    
    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
    <param name="scan_topic" value="$(arg scan_topic)"/>
    
    <!-- Debug parameters -->
    <!--
      <param name="output_timing" value="false"/>
      <param name="pub_drawings" value="true"/>
      <param name="pub_debug_output" value="true"/>
    -->
    <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />
  </node>
    
  <!--<node pkg="tf" type="static_transform_publisher" name="map_nav_broadcaster" args="0 0 0 0 0 0 map nav 100"/>-->
</launch>
  
  
