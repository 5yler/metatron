<?xml version="1.0"?>

<!-- sensors.launch
     Gigatron sensor launch file for ZED, RPLIDAR, IMU

     @author  Syler Wagner  <syler@mit.edu>
     
     @date    2015-09-08    syler   creation
 
     This launch file runs the ROS nodes for the ZED, RPLIDAR, and IMU sensors.

     Usage Instructions:
     1. In a terminal window, run:
        roslaunch gigatron sensors.launch
-->

<launch>
  <arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
  <arg name="base_frame" default="base_footprint"/>
  <arg name="odom_frame" default="base_footprint"/>
  <arg name="pub_map_odom_transform" default="true"/>
  <arg name="scan_subscriber_queue_size" default="5"/>
  <arg name="scan_topic" default="scan"/>
  <arg name="map_size" default="2048"/>

<!-- RPLIDAR -->
  <node pkg="rplidar_ros" type="rplidarNode" name="rplidarNode" output="screen">
    <!-- set serial port parameter to /dev/ttyUSB1 because ZED has /dev/ttyUSB0 -->
    <param name="serial_port" value="/dev/ttyUSB0"/>
  </node>

<!-- ZED -->
  <arg name="camera" default="zed" />
  <node pkg="ros_zed_cuda_driver" type="zed_camera_node" name="zed_camera" ns="$(arg camera)" output="screen">

        <!-- Possible values: VGA HD2K HD1080 HD720 -->
        <param name="resolution" value="VGA"/>

        <!-- A requested fps for this resolution. Set as 0.0 will choose the default fps for this resolution ( see User guide) -->
        <param name="fps" value="15.0"/>

        <!-- Enable TF publishing. Disable if using a robot model -->
        <param name="publish_tf" value="false"/>

        <!-- Enable left and right RGB image publishing. Image are rectified -->
        <param name="enable_rgb" value="true"/>

        <!-- Enable monochrome pointcloud publishing  -->
        <param name="enable_ptcloud" value="false"/>

        <!-- Enable rgb pointcloud publishing. Only available if "enable_rgb" is true  -->
        <param name="enable_rgb_ptcloud" value="false"/>

        <!-- Enable depth image publishing. Depth image values are in floating point -->
        <param name="enable_depth" value="true"/>

        <!-- Enable disparity image publishing. Image is normalized for visualization purpose -->
        <param name="enable_norm_disparity" value="false"/>

        <!-- Enable confidence image publishing. Image is normalized for visualization purpose -->
        <param name="enable_norm_confidence" value="false"/>

        <!-- Filtering value for the disparity map (and by extension the depth map). value in [1,100].
             A lower value means more confidence and precision (but less density), an upper value reduces
             the filtering (more density, less certainty). Other value means no filtering. -->
        <param name="confidence_thresh" value="60"/>
  </node>


<!-- IMU -->
  <node pkg="rtimulib_ros" type="rtimulib_ros" name="rtimulib_node" output="screen">
      <param name="calibration_file_path" value="$(find rtimulib_ros)/config"/>
      <param name="frame_id" value="map"/> <!-- /map is used for debug in RViz, to be replaced by the imu_link -->
      <param name="update_rate" value="10"/>
  </node>


    
  <!--<node pkg="tf" type="static_transform_publisher" name="map_nav_broadcaster" args="0 0 0 0 0 0 map nav 100"/>-->
</launch>
  
  
